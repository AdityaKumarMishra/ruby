-if !@exercise.overall_time.nil? && @exercise.timer_option_type == 'individual_question'
  %div{class: 'hidden', id: 'question-allotted-time', value: "#{@question_time}"}
.resource_col.mbot21
  %h4.fl Attempting exercise
  .exam_list.side_exam_ques.mcq_mock_single{style: "max-width:fit-content"}
    .pagination.pagination_mcq_single_question
      - count = 1
      - filter_mcq_stems(@exercise).each_with_index do |mcq_stem, index|
        - @exercise.mcq_attempts.includes(mcq:[:mcq_answers, :mcq_stem]).where(mcq_stem: mcq_stem).order(:mcq_id).each_with_index do |m_attempt, ind|
          %li{ role: 'presentation', class: "#{(@selected_tab.present? ? (@selected_tab == m_attempt.mcq.id.to_s) : (index == 0 && ind == 0)) ? 'active' : ''} #{m_attempt.mcq_answer.present? ? 'add_green' : '' }" }
            %a{ "data-toggle": 'tab', role: 'tab', href: "\#m#{index}_#{ind}", 'aria-controls': "m#{index}_#{ind}", onclick: "stopRunnerTimer_single(event)" }
              = "#{count}"
              - count = count + 1
              .mcq-stem-id.hidden= m_attempt.mcq.id
              .mcq-stem-question-id.hidden= mcq_stem.id

.ques_exam_list
  .tab-content.tab_content_width
    .time_wrapper
      .time_heading
        -if !@exercise.overall_time.nil? && @exercise.timer_option_type == 'entire_exam'
          .question_timer
            %i.fa.fa-clock-o
            %b Time Remaining:
            %span{id: "exam_total_time_remaining"}
    -count = 0
    - filter_mcq_stems(@exercise).each_with_index do |mcq_stem, index|
      - @exercise.mcq_attempts.includes(mcq:[:mcq_answers, :mcq_stem]).where(mcq_stem: mcq_stem).order(:mcq_id).each_with_index do |m_attempt, ind|
        .tab-pane{ id: "m#{index}_#{ind}", role: 'tabpanel', class: ('active' if @selected_tab.present? ? (@selected_tab == m_attempt.mcq.id.to_s) : (index == 0 && ind == 0))}
          %div{class: 'hidden', id: 'mcq-stem-timer', 'exercise-id': @exercise.id, 'section-type': 'Exercise', 'mcq-question-id': mcq_stem.id }
          .mcq-stem-question-id-active.hidden= mcq_stem.id
          - exercise_count = @exercise.mcq_attempts.includes(mcq:[:mcq_answers, :mcq_stem]).where(mcq_stem: mcq_stem).order(:mcq_id).count
          %p{style: "margin-top: 30px;"} There #{exercise_count == 1 ? 'is' : 'are'} #{exercise_count} #{exercise_count == 1 ? 'question' : 'questions'} in this unit
          %h4.fnt-20= mcq_stem.title
          -if !@exercise.overall_time.nil? && @exercise.timer_option_type == 'individual_question'
            .time_wrapper
            .time_heading
              .question_timer
                %b Time Allotted:
                %span=Time.at(@question_time).utc.strftime("%H:%M:%S")
                %br
                %b Time Remaining:
                %span{id: "question_time_remaining_#{m_attempt.mcq.id}"}
          .mcq_stem_description.ck_edtr_cstm_list.ques_single1
            = mcq_stem.description.html_safe
          .quest-col.ques_col_single_1{ class: "question", id: "#{m_attempt.id}"}
            %h4.pos_rel.fnt-20
              %span.mcqNum= "#{count += 1}."
              = m_attempt.mcq.question.html_safe
            = simple_fields_for "mcq_attempts[#{m_attempt.id}]", m_attempt do |e|
              %ul.exer-list.ques_ans_list
                - ans_ind = 0
                = e.collection_radio_buttons(:mcq_answer_id, m_attempt.mcq.mcq_answers,:id, :answer, { boolean_style: :inline, item_wrapper_tag: false }) do |builder|
                  - answer_text = builder.text.gsub("\n", "").include?('<p>') ? builder.text.gsub("\n", "") : "<p align='justify'>#{builder.text.gsub("\n", "")}</p>"
                  %li.admin_custom_radio.answer_scroll_bar
                    = builder.radio_button(class: "unattempt_question") + list_exam_alphabet_style(ans_ind, answer_text.html_safe, "mcq_attempts_#{m_attempt.id}_mcq_answer_id_#{builder.object.id}").html_safe
                    - ans_ind += 1

            .flash_message{style:"display: none;"}
          .text-center.full_width.mtop30.mbot10
            - if index != 0 || ind != 0
              %button.btnPrevious1.black_default_btn.hvr-shutter-in-horizontal{ type: 'button', "data-answered" => "#{m_attempt.present? && m_attempt.mcq_answer.present?}" } Previous
            - if index != filter_mcq_stems(@exercise).count - 1
              %button.btnNext1.black_default_btn.hvr-shutter-in-horizontal{ type: 'button', "data-answered" => "#{m_attempt.present? && m_attempt.mcq_answer.present?}" } Next
            - if index == filter_mcq_stems(@exercise).count - 1
              -if mcq_stem.mcqs.count - 1 > ind
                %button.btnNext1.black_default_btn.hvr-shutter-in-horizontal{ type: 'button', "data-answered" => "#{m_attempt.present? && m_attempt.mcq_answer.present?}" } Next
              -else
                = link_to 'Finish', "javascript:void(0)", class: 'default_btn hvr-shutter-in-horizontal return_font', id: "submit_mcq_attempt", onclick: "stopRunnerTimeSingle(event)"

-if !@exercise.overall_time.nil? && @exercise.timer_option_type == 'individual_question'
  :javascript
    var time = $("#question-allotted-time").attr('value');
    var m_id = $('.pagination_mcq_single_question').find('li.active').find('.mcq-stem-id').text()
    showRemaningTimer(time, m_id);

-if !@exercise.overall_time.nil? && @exercise.timer_option_type == 'entire_exam'
  :javascript
    var sa = Cookies.get('current_exe_atmpt')
    if(sa){
      sa = JSON.parse(sa)
      var time = sa['end'] - sa['start']
    }else{
      var time = '#{@exercise.overall_time * 60}'
    }
    showExamRemaningTimer(time);

:javascript

  $(document).ready(function() {
    $('.btn_reset').addClass('zoom_active');
    $(".faq_wrapper").toggleClass("hide_sidebar");
  });

  QuestionsFontResize();

:css
  h4 table{
    line-height: 1.428571429 !important;
    color: #333333 !important;
    font-weight: bold;
  }

  .pos_rel{
    overflow-y: scroll;
  }
  .answer_scroll_bar{
    overflow-y: scroll;
  }
  .ans_option_text img{
    width: auto;
    height: auto;
  }
  .ques_single1{
    width: 60%;
    padding-right:30px;
    overflow-x: scroll;
  }
  .ques_col_single_1{
    width: 40%;
    border-top:0px;
    padding-top:0px;
  }
   @media only screen and (min-width: 310px) and (max-width: 768px) {
   .ques_single1{
      width:100%;
    }
    .ques_col_single_1{
      width:100%;
    }
    .mcq_mock_single .pagination_mcq_single_question li{
     margin-bottom:10px;
    }
    .resource_col h4{
      margin-bottom:10px;
    }
  }
