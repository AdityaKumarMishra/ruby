.page_Wrapper.width100
  .header
    = render 'ucat_question_header'
  .pagination.pagination_mcq_single_question
    - count = 1
    - filter_mcq_stems(@exercise).each_with_index do |mcq_stem, index|
      - @exercise.mcq_attempts.includes(mcq:[:mcq_answers, :mcq_stem]).where(mcq_stem: mcq_stem).order(:mcq_id).each_with_index do |m_attempt, ind|
        %li{ role: 'presentation', class: "#{(@selected_tab.present? ? (@selected_tab == m_attempt.mcq.id.to_s) : (index == 0 && ind == 0)) ? 'active' : ''} #{m_attempt.mcq_answer.present? ? 'add_green' : '' }" }
          %a{ "data-toggle": 'tab', role: 'tab', href: "\#m#{index}_#{ind}", 'aria-controls': "m#{index}_#{ind}", onclick: "stopRunnerTimer_single(event)" }
            / = "#{count}"
            - count = count + 1
            .mcq-stem-id.hidden= m_attempt.mcq.id
            .mcq-stem-question-id.hidden= mcq_stem.id
  .tab-content
    - count = 0
    - filter_mcq_stems(@exercise).each_with_index do |mcq_stem, index|
      - @exercise.mcq_attempts.includes(mcq:[:mcq_answers, :mcq_stem]).where(mcq_stem: mcq_stem).order(:mcq_id).each_with_index do |m_attempt, ind|
        .tab-pane{ id: "m#{index}_#{ind}", role: 'tabpanel', class: ('active' if @selected_tab.present? ? (@selected_tab == m_attempt.mcq.id.to_s) : (index == 0 && ind == 0))}
          %div{class: 'hidden', id: 'mcq-stem-timer', 'exercise-id': @exercise.id, 'section-type': 'Exercise', 'mcq-question-id': mcq_stem.id }
          .que_wrap
            .que_contant
              = mcq_stem.description.html_safe
            .que_ans{ class: "question", id: "#{m_attempt.id}"}
              %h2
                = m_attempt.mcq.question.html_safe
              = simple_fields_for "mcq_attempts[#{m_attempt.id}]", m_attempt do |e|
                %ul.radio_ans_list
                  - ans_ind = 0
                  = e.collection_radio_buttons(:mcq_answer_id, m_attempt.mcq.mcq_answers,:id, :answer, { boolean_style: :inline, item_wrapper_tag: false }) do |builder|
                    - answer_text = builder.text.gsub("\n", "").include?('<p>') ? builder.text.gsub("\n", "") : "<p align='justify'>#{builder.text.gsub("\n", "")}</p>"
                    %li
                      .radio_wrap
                        = builder.radio_button(class: "unattempt_question") + ucat_list_exam_alphabet_style(ans_ind, answer_text.html_safe, "mcq_attempts_#{m_attempt.id}_mcq_answer_id_#{builder.object.id}").html_safe
          .footer
            .end_exam
              %a.ftr_btn.btn_bdr_rgt{"data-target" => "#endexam_modal", "data-toggle" => "modal"}
                %i.fa.fa-sign-out{"aria-hidden" => "true"}
                = succeed "nd" do
                  %span e
            .end_exam.step_btn_wrap
              %a.ftr_btn.btn_bdr_lft.btnPrevious1
                %i.fa.fa-arrow-left{"aria-hidden" => "true"}
                = succeed "revious" do
                  %span p
              %a.ftr_btn.btn_bdr_lft.btnNext1
                %span> n
                ext
                %i.fa.fa-arrow-right{"aria-hidden" => "true"}
= render 'end_exam_modal'

:javascript

  $(document).on('ready page:load', function() {
    try{
      questions = $(".pagination_mcq_single_question > li").length;
      bars = parseInt(questions/10,10)
      last_bar = parseInt(questions%10,10)
      from = 0
      bar = []
      if (bars != 0){
        for(i=0;i<bars;i++){
          var collection = $(".pagination_mcq_single_question > li").slice(from,from+10)

          bar[i] = collection

          console.log(bar[i])
          from = from + 10
        }
        if(last_bar != 0){
          bar[bar.length] = $(".pagination_mcq_single_question > li").slice(from,from+last_bar+1)
        }
      }
      else{
        if(last_bar != 0){
          bar[0] = $(".pagination_mcq_single_question > li").slice(from,from+last_bar+1)
        }
      }
      for(i = 0; i<bar.length;i++){
        bar[i].wrapAll("<div class='q_nav' id='q_nav_"+i+"'></div>")
        if (i != (bar.length-1)){
          $("#q_nav_"+i).append("<li role='presentation' class='next_icon'><a role='tab' onclick='find_div(this)'>>></a></li>")
        }
        if (i != 0){
          $("#q_nav_"+i).prepend("<li role='presentation' class = 'prev_icon'><a role='tab' onclick= 'find_prev_div(this)'><<</a></li>")
        }
      }
      $(".q_nav").slice(1,bar.length).hide();
    }
    catch(err){
    }

    $('.btnNext1').click(function() {
      var questions = $('.tab-pane.active').find(".question");
      questions.each(function(){
        var checked_radio = ($(this).find("input:checked"))
        if (parseInt($('.pagination_mcq_single_question').find('li.active').text())%10 == 0){
          if ((checked_radio.length == 0) && ($(this).hasClass("warning_shown") == false)){
            $(this).addClass("warning_shown");
          }
          else{
            $(this).removeClass("warning_shown")
            var nav_bar = $('.pagination_mcq_single_question').find('li.active')
            nav_bar.parent().hide();
            var next_nav_bar = nav_bar.parent().next()
            next_nav_bar.show();
            next_nav_bar.find('li:nth-child(2)').addClass('active').find('a').trigger('click');
          }
        }
        else if (checked_radio.length > 0){
          $(this).removeClass("warning_shown")
          $('.pagination_mcq_single_question').find('li.active').removeClass('active').addClass('add_green').next().find('a').trigger('click');
        }
        else{
          if($(this).hasClass("warning_shown")){
            $(this).removeClass("warning_shown")
            $('.pagination_mcq_single_question').find('li.active').removeClass('active').next().find('a').trigger('click');
          }
          else{
            $(this).addClass("warning_shown");
          }
        }
      });
      // $('.gr-nav-tabs > .active').next('li').find('a').trigger('click');
      $('html, body').animate({ scrollTop: 0 }, 'slow');
    });

    $('.btnPrevious1').click(function() {
      var questions = $('.tab-pane.active').find(".question");
      questions.each(function(){
        var checked_radio = ($(this).find("input:checked"))
        if (parseInt($('.pagination_mcq_single_question').find('li.active').text())%10 == 1){
          if ((checked_radio.length == 0) && ($(this).hasClass("warning_shown") == false)){
            $(this).addClass("warning_shown");
          }
          else{
            $(this).removeClass("warning_shown")
            var nav_bar = $('.pagination_mcq_single_question').find('li.active')
            nav_bar.parent().hide();
            var prev_nav_bar = nav_bar.parent().prev()
            prev_nav_bar.show();
            prev_nav_bar.find('li:nth-child(10)').addClass('active').find('a').trigger('click');
          }
        }
        else if (checked_radio.length > 0){
          $(this).removeClass("warning_shown")
          $('.pagination_mcq_single_question').find('li.active').removeClass('active').addClass('add_green').prev().find('a').trigger('click');
        }
        else{
          if($(this).hasClass("warning_shown")){
            $(this).removeClass("warning_shown")
            $('.pagination_mcq_single_question').find('li.active').removeClass('active').prev().find('a').trigger('click');
          }
          else{
            $(this).addClass("warning_shown");
          }
        }
      });
      $('html, body').animate({ scrollTop: 0 }, 'fast');
    });

    $('.btnNext').click(function() {
      $('.nav-tabs > .active').next('li').find('a').trigger('click');
      $('.gr-nav-tabs > .active').next('li').find('a').trigger('click');
      $('html, body').animate({ scrollTop: 0 }, 'fast');
    });

    return $('.btnPrevious').click(function() {
      $('.nav-tabs > .active').prev('li').find('a').trigger('click');
      $('.gr-nav-tabs > .active').prev('li').find('a').trigger('click');
      $('html, body').animate({ scrollTop: 0 }, 'fast');
    });
  });

