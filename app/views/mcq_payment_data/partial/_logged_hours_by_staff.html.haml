- tot_author_hours = 0
- tot_author_hours_per_mcq = 0
- tot_reviewer_1_hours = 0
- tot_reviewer_1_hours_per_mcq = 0
- tot_reviewer_2_hours = 0
- tot_reviewer_2_hours_per_mcq = 0
- tot_video_explainer_hours = 0
- tot_video_explainer_hours_per_mcq = 0
- tot_video_explanation_reviewer_hours = 0
- tot_video_explanation_reviewer_hours_per_mcq = 0
- tot_all_hours = 0

- if @users.present? && !current_user.tutor?
  = will_paginate @users, renderer: BootstrapPagination::Rails

= hidden_field_tag :filename, @file_name
.loader{style: 'display: none;'}
%table.table.table-bordered.table-hover#table_id
  %thead
    %tr
      %th Staff
      %th Author Hours
      %th Author Hours / MCQs
      %th Reviewer 1 Hours
      %th Reviewer 1 Hours / MCQs
      %th Reviewer 2 Hours
      %th Reviewer 2 Hours / MCQs
      %th Video Explainer Hours
      %th Video Explainer Hours / MCQs
      %th Video Explanation Reviewer Hours
      %th Video Explanation Reviewer Hours / MCQs
      %th Total

    - @users = @users.where(id: current_user.id) if current_user.tutor?
    - if @users.present?
      - @users.each do |user|
        - mcq_hours_user = @mcq_hours.where(user_id: user.id)
        - mcqs_size = Mcq.where(mcq_stem_id: mcq_hours_user.where(logging_type: 'author').pluck(:mcq_stem_id).uniq).count
        - author_hours = mcq_hours_user.where(logging_type: 'author').map(&:hours).sum
        - author_hours_per_mcq = author_hours > 0 ? (author_hours.to_f / mcqs_size.to_f).round(2) : 0.0
        - mcqs_size = Mcq.where(mcq_stem_id: mcq_hours_user.where(logging_type: 'reviewer_1').pluck(:mcq_stem_id).uniq).count
        - reviewer_1_hours = mcq_hours_user.where(logging_type: 'reviewer_1').map(&:hours).sum
        - reviewer_1_hours_per_mcq = reviewer_1_hours > 0 ? (reviewer_1_hours.to_f / mcqs_size.to_f).round(2) : 0.0
        - mcqs_size = Mcq.where(mcq_stem_id: mcq_hours_user.where(logging_type: 'reviewer_2').pluck(:mcq_stem_id).uniq).count
        - reviewer_2_hours = mcq_hours_user.where(logging_type: 'reviewer_2').map(&:hours).sum
        - reviewer_2_hours_per_mcq = reviewer_2_hours > 0 ? (reviewer_2_hours.to_f / mcqs_size.to_f).round(2) : 0.0
        - mcqs_size = Mcq.where(mcq_stem_id: mcq_hours_user.where(logging_type: 'video_explainer').pluck(:mcq_stem_id).uniq).count
        - video_explainer_hours = mcq_hours_user.where(logging_type: 'video_explainer').map(&:hours).sum
        - video_explainer_hours_per_mcq = video_explainer_hours > 0 ? (video_explainer_hours.to_f / mcqs_size.to_f).round(2) : 0.0
        - mcqs_size = Mcq.where(mcq_stem_id: mcq_hours_user.where(logging_type: 'video_explanation_reviewer').pluck(:mcq_stem_id).uniq).count
        - video_explanation_reviewer_hours = mcq_hours_user.where(logging_type: 'video_explanation_reviewer').map(&:hours).sum
        - video_explanation_reviewer_hours_per_mcq = video_explanation_reviewer_hours > 0 ? (video_explanation_reviewer_hours.to_f / mcqs_size.to_f).round(2) : 0.0
        - all_hours = (author_hours.to_f.round(2) + reviewer_2_hours.to_f.round(2) + reviewer_1_hours.to_f.round(2) + video_explainer_hours.to_f.round(2) + video_explanation_reviewer_hours.to_f.round(2))

        - tot_author_hours += author_hours.to_f
        - tot_author_hours_per_mcq += author_hours_per_mcq.to_f
        - tot_reviewer_1_hours += reviewer_1_hours.to_f
        - tot_reviewer_1_hours_per_mcq += reviewer_1_hours_per_mcq.to_f
        - tot_reviewer_2_hours += reviewer_2_hours.to_f
        - tot_reviewer_2_hours_per_mcq += reviewer_2_hours_per_mcq.to_f
        - tot_video_explainer_hours += video_explainer_hours.to_f
        - tot_video_explainer_hours_per_mcq += video_explainer_hours_per_mcq.to_f
        - tot_video_explanation_reviewer_hours += video_explanation_reviewer_hours.to_f
        - tot_video_explanation_reviewer_hours_per_mcq += video_explanation_reviewer_hours_per_mcq.to_f
        - tot_all_hours += all_hours
        %tr
          %td= user.full_name
          %td= author_hours.to_f.round(2)
          %td= author_hours_per_mcq.to_f.round(2)
          %td= reviewer_1_hours.to_f.round(2)
          %td= reviewer_1_hours_per_mcq.to_f.round(2)
          %td= reviewer_2_hours.to_f.round(2)
          %td= reviewer_2_hours_per_mcq.to_f.round(2)
          %td= video_explainer_hours.to_f.round(2)
          %td= video_explainer_hours_per_mcq.to_f.round(2)
          %td= video_explanation_reviewer_hours.to_f.round(2)
          %td= video_explanation_reviewer_hours_per_mcq.to_f.round(2)
          %td= all_hours
  %tfoot
    %tr
      %td
        %b Page Total
      %td= tot_author_hours.round(2)
      %td= tot_author_hours.zero? ? 0.0 : (tot_author_hours.round(2) / @mcq_stems.select { |st| @mcq_hours.where(logging_type: 'author').pluck(:mcq_stem_id).uniq.include? st.id }.map { |m| m.mcqs.count.to_f }.sum.to_f.round(2)).round(2)
      %td= tot_reviewer_1_hours.round(2)
      %td= tot_reviewer_1_hours.zero? ? 0.0 : (tot_reviewer_1_hours.round(2) / @mcq_stems.select { |st| @mcq_hours.where(logging_type: 'reviewer_1').pluck(:mcq_stem_id).uniq.include? st.id }.map { |m| m.mcqs.count.to_f }.sum.to_f.round(2)).round(2)
      %td= tot_reviewer_2_hours.round(2)
      %td= tot_reviewer_2_hours.zero? ? 0.0 : (tot_reviewer_2_hours.round(2) / @mcq_stems.select { |st| @mcq_hours.where(logging_type: 'reviewer_2').pluck(:mcq_stem_id).uniq.include? st.id }.map { |m| m.mcqs.count.to_f }.sum.to_f.round(2)).round(2)
      %td= tot_video_explainer_hours.round(2)
      %td= tot_video_explainer_hours.zero? ? 0.0 : (tot_video_explainer_hours.round(2) / @mcq_stems.select { |st| @mcq_hours.where(logging_type: 'video_explainer').pluck(:mcq_stem_id).uniq.include? st.id }.map { |m| m.mcqs.count.to_f }.sum.to_f.round(2)).round(2)
      %td= tot_video_explanation_reviewer_hours.round(2)
      %td= tot_video_explanation_reviewer_hours.zero? ? 0.0 : (tot_video_explanation_reviewer_hours.round(2) / @mcq_stems.select { |st| @mcq_hours.where(logging_type: 'video_explanation_reviewer').pluck(:mcq_stem_id).uniq.include? st.id }.map { |m| m.mcqs.count.to_f }.sum.to_f.round(2)).round(2)
      %td= tot_all_hours.round(2)
    %tr
      %td
        %b All Total
      %td= @totals[:author_hours] || 0.0
      %td= @totals[:author_hours_per_mcq] || 0.0
      %td= @totals[:reviewer_1_hours] || 0.0
      %td= @totals[:reviewer_1_hours_per_mcq] || 0.0
      %td= @totals[:reviewer_2_hours] || 0.0
      %td= @totals[:reviewer_2_hours_per_mcq] || 0.0
      %td= @totals[:video_explainer_hours] || 0.0
      %td= @totals[:video_explainer_hours_per_mcq] || 0.0
      %td= @totals[:video_explanation_reviewer_hours] || 0.0
      %td= @totals[:video_explanation_reviewer_hours_per_mcq] || 0.0
      %td= @mcq_hours.map(&:hours).sum

:javascript
  $('#nav-tabs li').click(function(){
    if(!($(this).hasClass('active'))){
      var element = ($(this).attr('class').split('_')[0])
      var form = $('#'+element).find('form')
      var action = form.attr('action');
      if(action.search('.xls') != -1){
        form.attr('action', (form.attr('action').split('.')[0]))
      }
      var url = form.attr('action');
      $.ajax({
       type: "GET",
       url: url,
       dataType: 'script',
       data: form.serialize()
     });
    }
  })
  $('.csv_btn').click(function(){
    var form = $(this).parents('form')
    var page_no = $(this).attr('pageno')

    if (page_no == undefined){
      page_no = ''
    }
    $('#current_page').val(page_no)

    page_name = ''
    if (page_no != ''){
      page_name = page_name + ' - Page ' + page_no
    }

    var action = form.attr('action')
    if(action.search('.xls') == -1){
      form.attr('action', (form.attr('action')+'.xls'))
    }

    $('.loader').show();
    $('.csv_clicker').attr('disabled', true)
    fetch(form.attr('action') + '?' + form.serialize() + "&selection=" + encodeURI($('.ap_select').val()))
    .then(resp => resp.blob())
    .then(blob => {
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.style.display = 'none';
      a.href = url;
      a.download = $('#filename').val() + page_name + '.xls';
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      $('.loader').hide();
      $('.csv_clicker').attr('disabled', false);
    })
    .catch(() => alert('Unable to download file'));


    form.attr('action', form.attr('action').substring(0, form.attr('action').length - 4));
  })

  $('.submit-filter').click(function(){
    var form = $(this).parent().parent();
    var action = form.attr('action')
    if(action.search('.xls') != -1){
      form.attr('action', (form.attr('action').split('.')[0]))
    }
    var url = form.attr('action');
    $.ajax({
       type: "GET",
       url: url,
       dataType: 'script',
       data: form.serialize() + "&selection=" + encodeURI($('.ap_select').val())
    });
  })

:css
  .loader {
    border: 16px solid #f3f3f3;
    border-top: 16px solid green;
    border-radius: 50%;
    width: 120px;
    height: 120px;
    animation: spin 2s linear infinite;
    position: fixed;
    z-index: 100;
    top: 50%;
    left: 50%;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
