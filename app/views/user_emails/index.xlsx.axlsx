wb = xlsx_package.workbook
if @type == 'student_profile'
  wb.add_worksheet(name: "User Details") do |sheet|
    date_format = wb.styles.add_style :format_code => 'DD-MM-YYYY'
    def data_array(user)
      data_array = []
      data_array.push(user.id)
      data_array.push("#{user.first_name} #{user.last_name}")
      data_array.push(user.email)
      if user.state
        data_array.push(user.state.try(:titleize))
      else
        data_array.push("")
      end

      if user.questionnaire.present?
        data_array.push("Yes")
      else
        data_array.push("No")
      end

      data_array.push(user.role.try(:titleize))
      data_array.push(user.status&.capitalize.to_s)
      data_array.push(user.specialty)
      if user.student?
        if user.try(:questionnaire)
          if user.questionnaire.student_level == "highschool"
            data_array.push("High School")
            data_array.push(user.questionnaire.current_highschool)
            data_array.push(user.questionnaire.target_uni_course)
            data_array.push(user.questionnaire.highschool_year_level.try(:titleize))
            data_array.push("")
            data_array.push("")
            data_array.push("")
          elsif user.questionnaire.student_level == "university"
            data_array.push("University Student")
            data_array.push("")
            data_array.push("")
            data_array.push("")
            if user.questionnaire.try(:university).try(:name)
              data_array.push(user.questionnaire.university.name)
            else
              data_array.push("")
            end
            if user.questionnaire.try(:degree).try(:name)
              data_array.push(user.questionnaire.degree.name)
            else
              data_array.push("")
            end
            if user.questionnaire.try(:year)
              year_validate = (1900..2100).include?(user.questionnaire.year.to_i) ? true : false
              if year_validate
                data_array.push(user.questionnaire.year.to_i)
              else
                data_array.push("")
              end
            else
              data_array.push("")
            end
          else
            data_array.push("")
            data_array.push("")
            data_array.push("")
            data_array.push("")
            data_array.push("")
            data_array.push("")
            data_array.push("")
          end
          if !user.questionnaire.try(:umat_high_school).nil?
            if user.questionnaire.umat_high_school
              data_array.push("Yes")
            else
              data_array.push("No")
            end
          else
            data_array.push("NA")
          end
          if !user.questionnaire.try(:umat_uni).nil?
            if user.questionnaire.umat_uni
              data_array.push("Yes")
            else
              data_array.push("No")
            end
          else
            data_array.push("NA")
          end
          if user.questionnaire.try(:source).include? "Google/Search"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Word of mouth"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Facebook"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Posters(Large A3 sheets posted on wall)"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Posters(A4 sheets posted on wall)"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Flyers(Smaller A5 handouts)"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Brochures"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "In class"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Workshop"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Through student society"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "other"
            other_val = user.questionnaire.try(:source).reject(&:empty?).split("other").last[0]
            data_array.push("#{other_val}")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:last_source)
            data_array.push(user.questionnaire.last_source)
          else
            data_array.push("")
          end
          if user.questionnaire.try(:language_spoken)
            data_array.push(user.questionnaire.language_spoken == 'na' ? user.questionnaire.language_spoken.upcase : user.questionnaire.language_spoken.try(:titleize))
          else
            data_array.push("")
          end
        else
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
        end
        data_array.push(user.enrolled_in_trial)
        data_array.push(user.trial_course_name)
        first_course = user.purchased_courses.first
        if first_course.present?
          data_array.push(first_course.product_version.product_line.try(:name).try(:upcase))
          data_array.push(first_course.city)
          data_array.push(first_course.name)
        else
          data_array.push("")
          data_array.push("")
          data_array.push("")
        end

        data_array.push(user.created_at.to_date)
        if user.enrolments.present? && @stu_cat != "0"
          data_array.push(user.enrolments.where(trial: false).order(:id).first&.created_at&.to_date)
        else
          data_array.push("")
        end

        if user.enrolments.where(trial: false).order(:paid_at).first&.paid_at.nil?
          data_array.push("NA")
        else
          data_array.push(user.paid_enrolments.where(trial: false).order(:paid_at).first&.paid_at&.to_date)
        end

        data_array.push(user.since_enrolment_average_number_of_time_logged_in_per_day)
        data_array.push(user.since_enrolment_average_number_of_minutes_spend_per_day)
        data_array.push(user.sign_in_count_from_enrolment)
        data_array.push(user.total_online_time_from_enrolment)

        data_array.push(user.referals_count)
        second_course = user.purchased_courses.second
        if second_course.present?
          data_array.push(second_course.name)
          data_array.push(user.course_purchase_date(second_course.id))
        else
          data_array.push("")
          data_array.push("")
        end
        third_course = user.purchased_courses.third
        if third_course.present?
          data_array.push(third_course.name)
          data_array.push(user.course_purchase_date(third_course.id))
        else
          data_array.push("")
          data_array.push("")
        end
        fourth_course = user.purchased_courses.fourth
        if fourth_course.present?
          data_array.push(fourth_course.name)
          data_array.push(user.course_purchase_date(fourth_course.id))
        else
          data_array.push("")
          data_array.push("")
        end

        data_array.push(user.enrol_current_course_mcq_count)

        if user.confirmed_at.present?
          data_array.push("Confirmed")
        else
          data_array.push("Not Confirmed")
        end
        data_array.push("None")

        data_array.push(user.total_commulative_spend)
      else
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
      end
    end
    def data_array_trial(user, enrolment)
      data_array = []
      data_array.push(user.id)
      data_array.push("#{user.first_name} #{user.last_name}")
      data_array.push(user.email)
      if user.state
        data_array.push(user.state.try(:titleize))
      else
        data_array.push("")
      end

      if user.questionnaire.present?
        data_array.push("Yes")
      else
        data_array.push("No")
      end

      data_array.push(user.role.try(:titleize))
      data_array.push(user.status&.capitalize.to_s)
      data_array.push(user.specialty)
      if user.student?
        if user.try(:questionnaire)
          if user.questionnaire.student_level == "highschool"
            data_array.push("High School")
            data_array.push(user.questionnaire.current_highschool)
            data_array.push(user.questionnaire.target_uni_course)
            data_array.push(user.questionnaire.highschool_year_level.try(:titleize))
            data_array.push("")
            data_array.push("")
            data_array.push("")
          elsif user.questionnaire.student_level == "university"
            data_array.push("University Student")
            data_array.push("")
            data_array.push("")
            data_array.push("")
            if user.questionnaire.try(:university).try(:name)
              data_array.push(user.questionnaire.university.name)
            else
              data_array.push("")
            end
            if user.questionnaire.try(:degree).try(:name)
              data_array.push(user.questionnaire.degree.name)
            else
              data_array.push("")
            end
            if user.questionnaire.try(:year)
              year_validate = (1900..2100).include?(user.questionnaire.year.to_i) ? true : false
              if year_validate
                data_array.push(user.questionnaire.year.to_i)
              else
                data_array.push("")
              end
            else
              data_array.push("")
            end
          else
            data_array.push("")
            data_array.push("")
            data_array.push("")
            data_array.push("")
            data_array.push("")
            data_array.push("")
            data_array.push("")
          end
          if !user.questionnaire.try(:umat_high_school).nil?
            if user.questionnaire.umat_high_school
              data_array.push("Yes")
            else
              data_array.push("No")
            end
          else
            data_array.push("NA")
          end
          if !user.questionnaire.try(:umat_uni).nil?
            if user.questionnaire.umat_uni
              data_array.push("Yes")
            else
              data_array.push("No")
            end
          else
            data_array.push("NA")
          end
          if user.questionnaire.try(:source).include? "Google/Search"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Word of mouth"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Facebook"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Posters(Large A3 sheets posted on wall)"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Posters(A4 sheets posted on wall)"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Flyers(Smaller A5 handouts)"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Brochures"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "In class"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Workshop"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "Through student society"
            data_array.push("Yes")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:source).include? "other"
            other_val = user.questionnaire.try(:source).reject(&:empty?).split("other").last[0]
            data_array.push("#{other_val}")
          else
            data_array.push("No")
          end
          if user.questionnaire.try(:last_source)
            data_array.push(user.questionnaire.last_source)
          else
            data_array.push("")
          end
          if user.questionnaire.try(:language_spoken)
            data_array.push(user.questionnaire.language_spoken == 'na' ? user.questionnaire.language_spoken.upcase : user.questionnaire.language_spoken.try(:titleize))
          else
            data_array.push("")
          end
        else
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
          data_array.push("")
        end
        data_array.push(user.enrolled_in_trial)
        data_array.push(user.trial_course_name_free(enrolment))
        # data_array.push(user.trial_course_name)

        data_array.push("NA")
        data_array.push("NA")
        data_array.push("NA")

        data_array.push(user.created_at.to_date)
        if user.enrolments.present? && @stu_cat != "0"
          data_array.push(user.enrolments.order(:id).first.created_at.to_date)
        else
          data_array.push("")
        end

        data_array.push("NA")

        data_array.push(enrolment.trial_since_enrolment_average_number_of_time_logged_in_per_day)
        data_array.push(enrolment.trial_since_enrolment_average_number_of_min_spend_per_day)
        data_array.push(enrolment.trial_sign_in_count_from_enrolment)
        data_array.push(enrolment.trial_total_online_time_from_enrolment)

        data_array.push(user.referals_count)

        data_array.push("NA")
        data_array.push("NA")
        data_array.push("NA")
        data_array.push("NA")
        data_array.push("NA")
        data_array.push("NA")

        data_array.push(user.current_course_mcq_count(enrolment.course.id))

        if user.confirmed_at.present?
          data_array.push("Confirmed")
        else
          data_array.push("Not Confirmed")
        end

        if enrolment.trial && enrolment.user.upgraded_user?
          data_array.push("Upgraded")
        elsif enrolment.trial && enrolment.trial_expired?
          data_array.push("Expired")
        elsif enrolment.trial
          data_array.push("Active")
        else
          data_array.push("None")
        end

        data_array.push(user.total_commulative_spend)
      else
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
        data_array.push("")
      end
    end
    sheet.add_row ["User ID", "Name", "Email", "State", "Background Info Provided", "Role", "Account Status", "Specialty", "High School/University Student",  "Current High School", "Target University course",  "Year Level",  "University",  "Degree",  "Commencement Year", "Have you sat the UCAT?",  "Are you going to sit the UCAT again?", "Google/Search", "Word of mouth","Facebook","Posters(Large A3 sheets posted on wall)","Posters(A4 sheets posted on wall)","Flyers(Smaller A5 handouts)","Brochures","In class","Workshop","Through student society", "Other", "Where did you LAST see/hear about us before signing up?", "Language Spoken at Home Other than English", "Enrolled in Trial?", "Trial Course Name", "First Paid Course: Type", "First Paid Course: City", "First Paid Course: Name", "Registration Date", "Enrolment Date", "Payment Date(First Purchase)", "Average No. of time Logged in per day since enrollment", "Average No. of minutes spent using the system per day since enrollment", "No. of time Logged in from enrollment until now", "No. of minutes spent from enrollment until now", "Number of referrals made", "Second Course Name", "Second Course Payment Date", "Third Course Name", "Third Course Payment Date", "Fourth Course Name", "Fourth Course Payment Date", "MCQs Completed", "Email Status", "Status", "Total cumulative spend"], :style => [date_format]

    all_user_ids = @all_users.uniq.map(&:id)
    User.where(id: all_user_ids).includes(:address, questionnaire:[:university, :degree]).each do |user|
      if user.role == 'student'
        user.paid_enrolments.where(trial: true).each do |enrolment|
          if enrolment.user.has_free_trial_only?
            sheet.add_row data_array_trial(user, enrolment)
          end
        end
        sheet.add_row data_array(user)
      else
        sheet.add_row data_array(user)
      end
    end
  end

elsif @type == 'feature_upgrades'

  wb.add_worksheet(name: "Feature Upgrade Details") do |sheet|
    date_format = wb.styles.add_style :format_code => 'DD-MM-YYYY'
    def data_array(user, purchase_item=nil)
      data_array = []
      if purchase_item.present?
        data_array.push(user.id)

        data_array.push(purchase_item.order.reference_number)

        data_array.push(user.full_name)

        data_array.push(user.email)

        if purchase_item. purchasable_type == 'FeatureLog'
          unless purchase_item.purchasable.nil?
            unless purchase_item.purchasable.enrolment.nil?
              if purchase_item.purchasable.enrolment.course.name.include?("Custom")
                data_array.push(purchase_item.purchasable.enrolment.course.try(:name))
              else
                data_array.push(purchase_item.purchase_description)
              end
            end
          end
        elsif purchase_item. purchasable_type == 'Enrolment'
          data_array.push(purchase_item.purchasable.course.try(:name))
        else
          data_array.push("")
        end

        data_array.push(purchase_item.order.total_cost)

        if purchase_item.order.paid_at.present?
          data_array.push(purchase_item.order.paid_at.to_date)
        else
          data_array.push(purchase_item.order.created_at.to_date)
        end
      else
        data_array.push(user.id)
        data_array.push("")
        data_array.push(user.full_name)
        data_array.push(user.email)
        data_array.push("")
        data_array.push("")
        data_array.push("")
      end
      return data_array
    end

    sheet.add_row ["User ID", "Invoice Number", "Name", "Email", "Course/Feature Name", "Course/Feature price", "Purchase Date"], :style => [date_format]
    @all_users.uniq.each do |user|
      purchase_items = user.purchase_items.select{ |p|  p}
      if purchase_items.present?
        purchase_items.each do |purchase_item|
          sheet.add_row data_array(user, purchase_item)
        end
      else
        sheet.add_row data_array(user)
      end
    end
  end
elsif @type == 'enquiry_profile'
  wb.add_worksheet(name: "Enquiry Users Details") do |sheet|
    date_format = wb.styles.add_style :format_code => 'DD-MM-YYYY'
    def data_array(user)
      data_array = []

      data_array.push(user.id)

      data_array.push("#{user.first_name} #{user.last_name}")

      data_array.push("#{user.email}")

      if user.phone_number
        data_array.push(user.phone_number)
      else
        data_array.push("")
      end


      data_array.push(user.created_at.to_date)


      if user.question_tags.present?
        tag = Tag.find_by(id: user.question_tags.first)
        data_array.push(tag.present? ? tag.name : "" )
      else
        data_array.push(user.question_tags.join(", "))
      end

    end
    sheet.add_row ["EnquiryUser ID", "Name", "Email", "Phone Number", "Registration Date", "Question Tags"], :style => [date_format]

    @all_users.uniq.each do |user|
      sheet.add_row data_array(user)
    end
  end
elsif @type == 'mcq_stats'
  wb.add_worksheet(name: "MCQ stats") do |sheet|
    def data_array(user, enrolment)
      data_array = []
      data_array.push(user.id)
      data_array.push(user.full_name)
      data_array.push(user.email)
      data_array.push(enrolment.course.name)
      data_array.push(user.current_course_mcq_count(enrolment.course.id))

      if user.confirmed_at.present?
        data_array.push("Confirmed")
      else
        data_array.push("Not Confirmed")
      end



      if enrolment.trial && enrolment.user.upgraded_user?
        data_array.push("Upgraded")
      elsif enrolment.trial && enrolment.trial_expired?
        data_array.push("Expired")
      elsif enrolment.trial
        data_array.push("Active")
      else
        data_array.push("None")
      end

    end

    sheet.add_row ["User ID", "Name", "Email", "Course", "MCQs Completed", "Email Status", "Status"]
    @all_users.uniq.each do |user|
      user.reload.paid_enrolments.each do |enrolment|
        sheet.add_row data_array(user, enrolment)
      end
    end
  end
elsif @type == 'blog_profile'
  wb.add_worksheet(name: "Blog Users Details") do |sheet|
    def data_array(mailing_list)
      data_array = []
      data_array.push(mailing_list.email)
      blog_name = mailing_list.mailing_list.name
      if blog_name == 'blog_gamsat'
        data_array.push('GAMSAT')
      elsif blog_name == 'blog_umat'
        data_array.push('UCAT')
      elsif blog_name == 'blog_hsc'
        data_array.push('HSC')
      else
        data_array.push('VCE')
      end
    end
    sheet.add_row ["Email", "Product Version"]
    @all_users.uniq.each do |mailing_list|
      sheet.add_row data_array(mailing_list)
    end
  end

elsif @type == 'student_contact'
  wb.add_worksheet(name: "Student Contact Details") do |sheet|
    date_format = wb.styles.add_style :format_code => 'DD-MM-YYYY'
    def data_array(user)
      data_array = []
      data_array.push(user.id)
      data_array.push(user.full_name)
      data_array.push(user.email)
      data_array.push(user.phone_number)
      if user.student?
        purchase_courses = user.purchased_courses.first(4)
        if purchase_courses.present?
          (0..3).to_a.each do |index|
            course = purchase_courses[index]
            if course.present?
              data_array.push(course.name)
              data_array.push(user.course_purchase_date(course.id))
            else
              data_array.push("")
              data_array.push("")
            end
          end
        else
          (0..7).to_a.each do |i|
            data_array.push("")
          end
        end
      else
        (0..7).to_a.each do |i|
          data_array.push("")
        end
      end
      data_array
    end
    sheet.add_row ["User ID","Name","Email","Phone","First Paid Course: Name","Payment Date(First Purchase)","Second Course Name","Second Course Payment Date","Third Course Name","Third Course Payment Date","Fourth Course Name","Fourth Course Payment Date"], :style => [date_format]
    @all_users.uniq.each do |user|
      sheet.add_row data_array(user)
    end
  end
elsif @type == 'student_profile_course'
  wb.add_worksheet(name: "Student Profile Details") do |sheet|
      date_format = wb.styles.add_style :format_code => 'DD-MM-YYYY'
      def data_array(user)
        data_array = []
        data_array.push(user.id)
        data_array.push(user.full_name)
        data_array.push(user.email)
        data_array.push(user.phone_number)
        if user.line_one.present?
          data_array.push(user.line_one)
        else
          data_array.push("")
        end
        if user.line_two.present?
          data_array.push(user.line_two)
        else
          data_array.push("")
        end
        if user.suburb.present?
          data_array.push(user.suburb)
        else
          data_array.push("")
        end
        if user.post_code.present?
          data_array.push(user.post_code)
        else
          data_array.push("")
        end
        if user.state.present?
          data_array.push(user.state.try(:titleize))
        else
          data_array.push("")
        end
        if user.country.present?
          data_array.push(user.country.try(:titleize))
        else
          data_array.push("")
        end

        if user.student?
          first_course = user.purchased_courses.first
          if first_course.present?
            data_array.push(first_course.name)
          else
            data_array.push("")
          end
          data_array.push(user.created_at.to_date)
          if user.enrolments.present? && @stu_cat != "0"
            data_array.push(user.enrolments.where(trial: false).order(:id).first.created_at.to_date)
          else
            data_array.push("")
          end
          if first_course.present?
            data_array.push(user.course_purchase_date(first_course.id))
          else
            data_array.push("")
          end
          second_course = user.purchased_courses.second
          if second_course.present?
            data_array.push(second_course.name)
            data_array.push(user.course_purchase_date(second_course.id))
          else
            data_array.push("")
            data_array.push("")
          end
          third_course = user.purchased_courses.third
          if third_course.present?
            data_array.push(third_course.name)
            data_array.push(user.course_purchase_date(third_course.id))
          else
            data_array.push("")
            data_array.push("")
          end
          fourth_course = user.purchased_courses.fourth
          if fourth_course.present?
            data_array.push(fourth_course.name)
            data_array.push(user.course_purchase_date(fourth_course.id))
          else
            data_array.push("")
            data_array.push("")
          end
        else
          (0..9).to_a.each do |i|
            data_array.push("")
          end
        end
      end
      sheet.add_row ["User ID","Name","Email","Phone","Address Line One","Address Line Two","Suburb","Post code","State","Country","First Paid Course: Name","Registration Date","Enrolment Date","Payment Date(First Purchase)","Second Course Name","Second Course Payment Date","Third Course Name","Third Course Payment Date","Fourth Course Name","Fourth Course Payment Date"], :style => [date_format]
      @all_users.uniq.each do |user|
          sheet.add_row data_array(user)
      end
  end

elsif @type == 'student_survey'
  wb.add_worksheet(name: "Student Survey Details") do |sheet|
      date_format = wb.styles.add_style :format_code => 'DD-MM-YYYY'
      def data_array(user)
        data_array = []
        data_array.push(user.id)
        data_array.push(user.full_name)
        data_array.push(user.email)
        if user.state.present?
          data_array.push(user.state.try(:titleize))
        else
          data_array.push("")
        end
        if user.questionnaire.present?
          data_array.push("Yes")
        else
          data_array.push("No")
        end

        if user.student?
          if user.try(:questionnaire)
            if user.questionnaire.student_region == "domestic"
              data_array.push("Domestic")
            elsif user.questionnaire.student_region == "international"
              data_array.push("International")
            else
              data_array.push("")
            end
            if user.questionnaire.student_level == "highschool"
              data_array.push("High School")
              data_array.push(user.questionnaire.current_highschool)
              data_array.push(user.questionnaire.target_uni_course)
              data_array.push(user.questionnaire.highschool_year_level.try(:titleize))
              data_array.push("")
              data_array.push("")
              data_array.push("")
            elsif user.questionnaire.student_level == "university"
              data_array.push("University Student")
              data_array.push("")
              data_array.push("")
              data_array.push("")
              if user.questionnaire.try(:university).try(:name)
                data_array.push(user.questionnaire.university.name)
              else
                data_array.push("")
              end
              if user.questionnaire.try(:degree).try(:name)
                data_array.push(user.questionnaire.degree.name)
              else
                data_array.push("")
              end
              if user.questionnaire.try(:year)
                year_validate = (1900..2100).include?(user.questionnaire.year.to_i) ? true : false
                if year_validate
                  data_array.push(user.questionnaire.year.to_i)
                else
                  data_array.push("")
                end
              else
                data_array.push("")
              end
            else
              (0..6).to_a.each do |i|
                data_array.push("")
              end
            end
            if !user.questionnaire.try(:umat_high_school).nil?
              if user.questionnaire.umat_high_school
                data_array.push("Yes")
              else
                data_array.push("No")
              end
            else
              data_array.push("NA")
            end
            if !user.questionnaire.try(:umat_uni).nil?
              if user.questionnaire.umat_uni
                data_array.push("Yes")
              else
                data_array.push("No")
              end
            else
              data_array.push("NA")
            end
            if user.questionnaire.try(:source).include? "Google/Search"
              data_array.push("Yes")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:source).include? "Word of mouth"
              data_array.push("Yes")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:source).include? "Facebook"
              data_array.push("Yes")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:source).include? "Posters(Large A3 sheets posted on wall)"
              data_array.push("Yes")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:source).include? "Posters(A4 sheets posted on wall)"
              data_array.push("Yes")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:source).include? "Flyers(Smaller A5 handouts)"
              data_array.push("Yes")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:source).include? "Brochures"
              data_array.push("Yes")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:source).include? "In class"
              data_array.push("Yes")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:source).include? "Workshop"
              data_array.push("Yes")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:source).include? "Through student society"
              data_array.push("Yes")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:source).include? "other"
              other_val = user.questionnaire.try(:source).reject(&:empty?).split("other").last[0]
              data_array.push("#{other_val}")
            else
              data_array.push("No")
            end
            if user.questionnaire.try(:last_source)
              data_array.push(user.questionnaire.last_source)
            else
              data_array.push("")
            end
            if user.questionnaire.try(:language_spoken)
              data_array.push(user.questionnaire.language_spoken == 'na' ? user.questionnaire.language_spoken.upcase : user.questionnaire.language_spoken.try(:titleize))
            else
              data_array.push("")
            end
          else
            (0..21).to_a.each do |i|
              data_array.push("")
            end
          end
        else
          (0..21).to_a.each do |i|
            data_array.push("")
          end
        end
      end
      sheet.add_row ["User ID", "Name", "Email", "State", "Background Info Provided", "Domestic/International","High School/University Student",  "Current High School", "Target University course",  "Year Level",  "University",  "Degree",  "Commencement Year", "Have you sat the UCAT?",  "Are you going to sit the UCAT again?", "Google/Search", "Word of mouth","Facebook","Posters(Large A3 sheets posted on wall)","Posters(A4 sheets posted on wall)","Flyers(Smaller A5 handouts)","Brochures","In class","Workshop","Through student society", "Other", "Where did you LAST see/hear about us before signing up?", "Language Spoken at Home Other than English"], :style => [date_format]
      all_user_ids = @all_users.uniq.map(&:id)
      User.where(id: all_user_ids).includes(:address, questionnaire:[:university, :degree]).each do |user|
        sheet.add_row data_array(user)
      end
  end
end
